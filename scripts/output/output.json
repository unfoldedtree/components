{
  "page": {
    "title": "First Orion UI Documentation",
    "description": "Find all the information you need to get started with First Orion UI.",
    "path": "/",
    "entry": "index",
    "excludedDirectories": [],
    "tabSourceJson": "info",
    "tabs": [
      {
        "name": "Getting Started",
        "path": "getting-started",
        "description": "Get started with First Orion UI by exploring the documentation, examples, and API references. This section provides a comprehensive guide to help you understand the framework and its components.",
        "tabId": "getting-started",
        "order": 1
      },
      {
        "name": "Examples",
        "path": "/examples",
        "description": "A collection of examples demonstrating the usage of First Orion UI components.",
        "tabId": "examples",
        "order": 2,
        "children": [
          {
            "name": "Alert Example",
            "entry": "alert-example",
            "description": "Alert example demonstrates the usage of the alert component. It showcases how to create alerts with different types, such as success, error, and warning.",
            "path": "alert-example",
            "excludedDirectories": [],
            "tabId": "alert-example",
            "componentPath": "/alert",
            "componentData": {
              "name": "Alert",
              "path": "/alert",
              "description": "An alert component that displays a message to the user.",
              "props": []
            }
          },
          {
            "name": "Button Example",
            "entry": "button-example",
            "description": "Button example demonstrates the usage of different button types and their functionalities. It showcases how to create buttons with various styles, sizes, and actions.",
            "path": "button-example",
            "excludedDirectories": [],
            "tabId": "button-example",
            "componentPath": "/button",
            "componentData": {
              "name": "Button",
              "path": "/button",
              "description": "A button component that triggers an action when clicked.",
              "props": [
                {
                  "name": "size",
                  "type": "string",
                  "default": "md",
                  "description": "The size of the button. Can be 'xs', 'sm', 'md', 'lg', or 'xl'."
                },
                {
                  "name": "variant",
                  "type": "string",
                  "default": "primary",
                  "description": "The variant of the button. Can be 'primary', 'secondary', or 'soft'."
                },
                {
                  "name": "disabled",
                  "type": "boolean",
                  "default": false,
                  "description": "If true, the button will be disabled and not clickable."
                },
                {
                  "name": "loading",
                  "type": "boolean",
                  "default": false,
                  "description": "If true, a loading spinner will be shown inside the button."
                },
                {
                  "name": "submit",
                  "type": "boolean",
                  "default": false,
                  "description": "If true, the button will be of type 'submit'."
                },
                {
                  "name": "on-click",
                  "type": "function",
                  "default": null,
                  "description": "A function to be called when the button is clicked."
                }
              ]
            }
          },
          {
            "name": "Checkbox Example",
            "entry": "checkbox-example",
            "description": "Checkbox example demonstrates the usage of the checkbox component. It showcases how to create a simple checkbox that allows you to select or deselect an option.",
            "path": "checkbox-example",
            "excludedDirectories": [],
            "tabId": "checkbox-example",
            "componentPath": "/checkbox",
            "componentData": {
              "name": "Checkbox",
              "path": "/checkbox",
              "description": "A simple checkbox component that allows you to select or deselect an option.",
              "props": [
                {
                  "name": "checked",
                  "type": "boolean",
                  "description": "If true, the checkbox will be checked.",
                  "default": "false"
                },
                {
                  "name": "label",
                  "type": "string",
                  "description": "The label of the checkbox."
                },
                {
                  "name": "description",
                  "type": "string",
                  "description": "A description for the checkbox, displayed below the label."
                },
                {
                  "name": "disabled",
                  "type": "boolean",
                  "description": "If true, the checkbox will be disabled."
                },
                {
                  "name": "onChange",
                  "type": "function",
                  "description": "Callback function when the checkbox state changes."
                }
              ]
            }
          },
          {
            "name": "Combobox Example",
            "entry": "combobox-example",
            "description": "An example of a combobox component that allows users to select an option from a dropdown or enter a custom value.",
            "path": "combobox-example",
            "excludedDirectories": [],
            "tabId": "combobox-example",
            "componentPath": "/combobox",
            "componentData": {
              "name": "Combobox",
              "path": "/combobox",
              "description": "An example of a combobox component that allows users to select an option from a dropdown or enter a custom value.",
              "props": [
                {
                  "name": "options",
                  "type": "array",
                  "description": "The options for the combobox dropdown.",
                  "default": "[]"
                },
                {
                  "name": "selectedOption",
                  "type": "string",
                  "description": "The currently selected option of the combobox."
                },
                {
                  "name": "onChange",
                  "type": "function",
                  "description": "Callback function when the selected option changes."
                },
                {
                  "name": "placeholder",
                  "type": "string",
                  "description": "Placeholder text displayed when no option is selected.",
                  "default": ""
                },
                {
                  "name": "disabled",
                  "type": "boolean",
                  "description": "If true, the combobox will be disabled.",
                  "default": false
                }
              ]
            }
          },
          {
            "name": "Input Example",
            "entry": "input-example",
            "description": "Input example demonstrates the usage of the input component. It showcases how to create different types of inputs, such as text, password, and email.",
            "path": "input-example",
            "excludedDirectories": [],
            "tabId": "input-example",
            "componentPath": "/input"
          },
          {
            "name": "Select Example",
            "entry": "select-example",
            "description": "Select example demonstrates the usage of the select component. It showcases how to create a dropdown with various options and handle selection changes.",
            "path": "select-example",
            "excludedDirectories": [],
            "tabId": "select-example",
            "componentPath": "/select",
            "componentData": {
              "name": "Select",
              "path": "/select",
              "description": "A simple dropdown component that allows you to select an option from a list.",
              "props": [
                {
                  "name": "options",
                  "type": "array",
                  "description": "The options for the dropdown.",
                  "default": "[]"
                },
                {
                  "name": "selectedOption",
                  "type": "string",
                  "description": "The currently selected option of the dropdown."
                },
                {
                  "name": "onChange",
                  "type": "function",
                  "description": "Callback function when the selected option changes."
                },
                {
                  "name": "placeholder",
                  "type": "string",
                  "description": "Placeholder text displayed when no option is selected.",
                  "default": ""
                },
                {
                  "name": "disabled",
                  "type": "boolean",
                  "description": "If true, the dropdown will be disabled.",
                  "default": false
                }
              ]
            }
          },
          {
            "name": "Table Example",
            "entry": "table-example",
            "description": "An example showcasing the use of a table component to display data in a structured format.",
            "path": "table-example",
            "excludedDirectories": [],
            "tabId": "table-example",
            "componentPath": "/table",
            "componentData": {
              "name": "Table",
              "path": "/table",
              "description": "A component for displaying data in a tabular format.",
              "props": [
                {
                  "name": "data",
                  "type": "Array",
                  "description": "An array of objects representing the rows of the table.",
                  "required": true
                },
                {
                  "name": "columns",
                  "type": "Array",
                  "description": "An array of objects defining the columns of the table, each with a 'header' and 'field' property.",
                  "required": true
                },
                {
                  "name": "striped",
                  "type": "Boolean",
                  "description": "If true, applies a striped style to the table rows.",
                  "default": false
                },
                {
                  "name": "bordered",
                  "type": "Boolean",
                  "description": "If true, applies a border to the table.",
                  "default": false
                },
                {
                  "name": "hoverable",
                  "type": "Boolean",
                  "description": "If true, highlights rows on hover.",
                  "default": false
                }
              ]
            }
          },
          {
            "name": "Textarea Example",
            "entry": "textarea-example",
            "description": "Textarea example demonstrates the usage of the textarea component. It showcases how to create a simple textarea that allows you to input multi-line text.",
            "path": "textarea-example",
            "excludedDirectories": [],
            "tabId": "textarea-example",
            "componentPath": "/textarea",
            "componentData": {
              "name": "Textarea",
              "path": "/textarea",
              "description": "A simple textarea component that allows you to input multi-line text.",
              "props": [
                {
                  "name": "value",
                  "type": "string",
                  "description": "The current value of the textarea.",
                  "default": ""
                },
                {
                  "name": "placeholder",
                  "type": "string",
                  "description": "Placeholder text displayed when the textarea is empty.",
                  "default": ""
                },
                {
                  "name": "rows",
                  "type": "number",
                  "description": "Number of visible text lines for the textarea.",
                  "default": 3
                },
                {
                  "name": "cols",
                  "type": "number",
                  "description": "Number of visible character columns for the textarea.",
                  "default": 20
                },
                {
                  "name": "disabled",
                  "type": "boolean",
                  "description": "If true, the textarea will be disabled.",
                  "default": false
                },
                {
                  "name": "onChange",
                  "type": "function",
                  "description": "Callback function when the value of the textarea changes."
                },
                {
                  "name": "autoResize",
                  "type": "boolean",
                  "description": "If true, the textarea will automatically adjust its height based on the content.",
                  "default": false
                },
                {
                  "name": "maxLength",
                  "type": "number",
                  "description": "Maximum number of characters allowed in the textarea.",
                  "default": null
                }
              ]
            }
          },
          {
            "name": "Toggle Example",
            "entry": "toggle-example",
            "description": "Toggle example demonstrates the usage of the toggle component. It showcases how to create a simple toggle switch that allows you to toggle between two states.",
            "path": "toggle-example",
            "excludedDirectories": [],
            "tabId": "toggle-example",
            "componentPath": "/toggle",
            "componentData": {
              "name": "Toggle",
              "path": "/toggle",
              "description": "A simple toggle switch component that allows you to toggle between two states.",
              "props": [
                {
                  "name": "primary",
                  "type": "boolean",
                  "description": "If true, the counter will be primary color.",
                  "default": "false"
                },
                {
                  "name": "label",
                  "type": "string",
                  "description": "The label of the dropdown."
                },
                {
                  "name": "options",
                  "type": "array",
                  "description": "The options for the dropdown.",
                  "default": "[]"
                },
                {
                  "name": "selectedOption",
                  "type": "string",
                  "description": "The selected option of the dropdown."
                },
                {
                  "name": "onChange",
                  "type": "function",
                  "description": "Callback function when the selected option changes."
                }
              ]
            }
          },
          {
            "name": "Upload Example",
            "entry": "upload-example",
            "description": "An example of a file upload component that supports drag-and-drop and progress indication.",
            "path": "upload-example",
            "excludedDirectories": [],
            "tabId": "upload-example",
            "componentPath": "/upload",
            "componentData": {
              "name": "File Upload",
              "path": "/upload",
              "description": "A component for uploading files with drag-and-drop support and progress indication.",
              "props": [
                {
                  "name": "accept",
                  "type": "string",
                  "description": "Comma-separated list of file types that the upload accepts.",
                  "default": ""
                },
                {
                  "name": "multiple",
                  "type": "boolean",
                  "description": "If true, allows multiple files to be selected.",
                  "default": false
                },
                {
                  "name": "onUpload",
                  "type": "function",
                  "description": "Callback function when files are uploaded."
                },
                {
                  "name": "disabled",
                  "type": "boolean",
                  "description": "If true, the upload component will be disabled.",
                  "default": false
                }
              ]
            }
          }
        ]
      }
    ]
  }
}